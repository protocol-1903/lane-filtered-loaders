for _, loader in pairs(data.raw.loader) do
  if loader.name:sub(1, 5) ~= "lane-" then
    local new = table.deepcopy(loader)
    new.name = "lane-" .. new.name
    new.localised_name = { "entity-name." .. loader.name }
    new.localised_description = { "entity-description." .. loader.name }
    new.placeable_by = new.placeable_by or data.raw.item[loader.name] and { item = loader.name, count = 1 }
    new.filter_count = 2
    new.per_lane_filters = true
    new.hidden_in_factoriopedia = true
    data.raw.loader[new.name] = new
  end
end

for _, loader in pairs(data.raw["loader-1x1"]) do
  if loader.name:sub(1, 4) ~= "aai-" and loader.name:sub(1, 5) ~= "lane-" then
    local new = table.deepcopy(loader)
    new.name = "lane-" .. new.name
    new.localised_name = { "entity-name." .. loader.name }
    new.localised_description = { "entity-description." .. loader.name }
    new.placeable_by = new.placeable_by or data.raw.item[loader.name] and { item = loader.name, count = 1 }
    new.filter_count = 2
    new.per_lane_filters = true
    new.hidden_in_factoriopedia = true
    data.raw["loader-1x1"][new.name] = new
  elseif mods["aai-loaders"] and loader.name:sub(1, 4) == "aai-" and loader.name:sub(1, 9) ~= "aai-lane-" then
    -- make loader using aai bcause i need it to 
    local aai_data = AAILoaders.make_tier{
      name = loader.name == "aai-loader" and "lane" or "lane-" .. loader.name:sub(5, -8),
      transport_belt = "transport-belt",
      speed = loader.speed,
      color = {1, 1, 1},
      fast_replaceable_group = loader.fast_replaceable_group,
      fluid = settings.startup["aai-loaders-mode"].value == "lubricated" and data.raw["storage-tank"][loader.name .. "-pipe"].fluid_box.filter or nil,
      fluid_per_minute = settings.startup["aai-loaders-mode"].value == "lubricated" and data.raw["storage-tank"][loader.name .. "-pipe"].fluid_box.volume - 100 or nil,
      recipe = {energy_required = 1},
      unlubricated_recipe = {energy_required = 1},
      collision_mask = loader.collision_mask,
      upgrade = loader.next_upgrade and "aai-lane-" .. loader.next_upgrade:sub(5) or nil,
      localise = true
    }

    -- delete autogenerated recipe and item
    data.raw.recipe[aai_data.recipe.name] = nil
    data.raw.item[aai_data.item.name] = nil

    -- modify required values
    aai_data.loader.filter_count = 2
    aai_data.loader.per_lane_filters = true
    aai_data.loader.hidden_in_factoriopedia = true

    -- patch stuff we don't want autofilled by aai
    aai_data.loader.icons = loader.icons
    aai_data.loader.minable = loader.minable
    aai_data.loader.placeable_by = data.raw.item[loader.name] and { item = loader.name, count = 1 }
    aai_data.loader.localised_name = { "entity-name." .. loader.name }
    aai_data.loader.belt_animation_set = loader.belt_animation_set
    aai_data.loader.structure = loader.structure
  end
end